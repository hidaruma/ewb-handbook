chapter 4
//i EWBの表現力

  前章では、EWBをトリガという視点から解説してみました。トリガの意味付けや指定できる要素などといったことを理解していただけたのではないでしょうか。しかし、実際に本を作成していく上で、トリガ指定された要素が、どのような表現力を持っているかを知っていなければ、作業がなかなか進んでいきません。
  そこで、この章では、トリガで指定された各要素が紙面上でどのように表現されていくのかということを、具体的な図を示しながら解説していきます。ここで、述べる事柄は、基本的にEWBが標準でサポートしているものに限っています。もし、これ以上の表現力を必要とする場合は、トリガなどを拡張しなければならないので、注意が必要です。

//ii 一般知識

//iii 体裁入力ファイル

  これまで説明したように、EWBでは編集者が原稿にトリガを入力することで、見出しや箇条書という要素を特定していきます。そして、制作者は、このトリガによって表現される各要素の体裁を指定します。EWBでは、この体裁を各要素ごとに“//in30体裁入力ファイル”と呼ばれるテキストファイルに記述します（//l010401）。体裁入力ファイルは、基本的に、本ごとに作成するものです。シリーズ化された出版物などの場合には、すでに作成されているファイルを流用することで、効率アップできます。
  また、このファイルには、各要素の体裁以外に、判型や版面の大きさ、柱やノンブルの位置などといった指定も行います。

//l010401 体裁入力ファイル

//iii 基本的な体裁指定

  各要素に共通な書体や級数などの文字関連に対して、どのような指定ができるのかを見てみましょう（//f010401）。

//f010401 基本的な体裁指定

//k1{
//g{//in33書体//}
//|現在、モリサワやアドビのPostScript書体が和文21書体、欧文200書体以上が同時に使用でき、PostScript形式の書体であればさらに追加することができます。この書体指定にはPostScriptフォント名（Ryumin-LightやTimes-Roman）を使います。さらに、PostScript書体以外に//TeXの標準的な書体も同時に使用できます。EWBで使用可能な書体に関しては、Appendix Dの書体一覧表を参照してください。
//g{//in516変形//}
//|和文書体に対しては、正体、長体、平体、斜体、かなつめを指定できます。変形の範囲は長体1（10%）〜長体4（40%）、平体1（10%）〜平体4（40%）、斜体1（10度）〜斜体3（30度）、かな（かなつめ）です。欧文の変形については標準ではサポートされません。
//g{//in34級数（文字サイズ）//}
//|文字サイズを級（Q）またはポイント（pt）で指定します。
//g{//in35字送り／//in36行送り//}
//|字送りや行送りは、歯（H）、ポイント（pt）、ミリ（mm）で指定します。小数点で指定することもできます。
//g{//in37字詰め／//in38字下げ／//in39字上げ//}
//|字詰め（１行の文字数）を字数で指定します。
また、字下げや字上げを指定する場合は、版面の両端からの値（絶対値）を字数／歯／ポイント／ミリで入力します。
//g{//in40ベースライン補正//}
//|EWBで使用する文字は、それぞれ異なる高さ、深さ、幅を持っており（//f010402）、//in41ベースライン（参照点を含む水平線）に従って組むと、文字がきれいに並んで見えるようになっています。一般的な和文書体とそれに伴う従属欧文との組み合せの場合は、きれいに並んで見えますが、字形の違った書体の組み合せを行うと並び方が不揃いになります。このような場合には、欧文のベースラインの位置を垂直方向（縦組の場合は水平方向）にずらしてきれいに見えるように補正をします（//f010403）。この補正値は、全角文字の高さを1として“0〜1”の小数、または歯／ポイント／ミリで値を設定します。この値は、大きくすると欧文文字が下にずれます（縦組では左にずれます）。
//g{//in544文字色//}
//|文字色の指定です。シアン、マゼンタ、イエロー、ブラックの各色成分について0.0〜1.0の数値で指定します。本文基本文字の色は指定できません（常に黒です）。
//}

//f010402 文字ボックス

//f010403 和文と欧文のベースライン補正

//ii 文字

  EWBでは、基本的に、パソコンなどで入力できるようなJISの第1水準および第2水準の漢字を扱うことができます。ただし、半角カナ文字は使用することができません。

//iii //in42半角／//in43全角

  全角で入力した文字は、すべて全角の送りになり、半角で入力した数字やアルファベットは//in45欧文送り（//in44プロポーショナルピッチ）になります（//f010404）。このため、数字や欧文は半角で入力した方がきれいに出力されるのでお勧めです。また、縦組の場合には、半角で入力したアルファベットなどの文字は横転して出力されます。

//f010404 半角／全角入力

//iii //in46禁則

//k1{
//g{行頭および行末禁則//}
//|EWBでは、通常の組版処理に従い、行頭および行末禁則処理を自動的に行います。この時の禁則対象文字は、括弧類や句読点、そして拗促音などがあげられます。約物類が多重になった場合も、適切な処理を行うように考慮されています。
//|また、EWBでは、字詰めが狭い場合にも対処できるように、拗促音（ァ、っなど）や音引き（ー）を禁則対象から外すことができるようになっています。
//g{段落に対する禁則//}
//|EWBは、段落を組む時に、最後の1行が1文字だけにならないように処理を行います。もし、このようなことが起こりそうな場合には、1文字をどうにかして2文字にしたり、その1文字を前の行に追い込んだりして処理します。
//}

//iii //in47和欧文間四分アキ

  和文と欧文の間に、自動的に四分アキを入れるかあるいは入れないかを指定できるようになっています（//f010405）。

//f010405 和欧文間四分アキ

//iii 約物や英単語などに対するスペーシング

  “（”や“、”などの約物は、通常全角の幅を持っています。しかし、約物が行頭や行末などに遭遇した場合には、禁則処理が行われて、約物の幅が半角から全角の間で変動します。また、英単語の追い出しや追い込みに伴う行中のスペース調整は、段落単位で行われるため、通常の組版処理の結果よりも優れたものが得られます（//f010407）。

//iii //in48ハイフネーション

  EWBでは、英単語が行末に遭遇した場合、可能な限り//in49追い込みや//in50追い出しを試みます。しかし、この処理が成功しなかった時には、その単語をハイフネーションの規則に従って、2つに分けることを行います（行末にハイフンは付かない：//f010406）。ただし、特殊な単語（技術用語など）は、この規則には適用できず行末からはみ出してしまうことがあります。

//f010406 段落単位のスペーシングとハイフネーション

//f010407 約物の組版

//ii 判型／基本組

  EWBでは、本の基本的な体裁を判型と基本組により決めます。また、版面はこの基本組、すなわち本文の字詰めや行数などの指定で決定します。

//f010408 判型

//iii //in51判型

  ミリ／歯／ポイント単位で、自由なサイズを指定できます（//f010408）。

//k1{
//g{//in52マージン//}
//|仕上がり線から版面までの上下左右のアキを表します。“地”のアキと“のど”のアキは、“//in53トップマージン”と“//in54小口側のマージン”という2つの指定項目により自動的に計算されます。
//}

//iii 基本組

  本文の字上げや字下げもサポートしています。

//k1{
//g{//in55強調//}
//|本文で使用する書体以外に、強調書体の指定もできます。強調したい単語を、“////g{”と“////}”で囲みます。
//}

//f010409 判型と基本組の出力

//ii //in56ページスタイル

  左右ページごとに、//in57柱と//in58ノンブルの付き方や出力位置などを指定できます（//f010410）。さらに、本文用や章扉用などといった複数のページスタイルを用意することができます。

//f010410 ページスタイル

//iii 補足説明

//k1{
//g{原点//}
//|出力位置の基準点を、ページの“右上、右下、左上、左下”の4点から選べます。
//g{オフセット横／オフセット縦//}
//|原点からの左右、上下の位置をミリ／歯／ポイント単位で表します（//f010413）。
//f010413 柱とノンブルの位置指定
//g{//in67シンボル//}
//|柱やノンブルは、自動的に発生させることができ、いろいろな表現で出力することが可能です（//f010411）。
//f010411 柱とノンブルのシンボル
//g{//in545修飾//}
//|柱やノンブルを罫線やEPS画像で飾ることができます。各修飾要素の縦横サイズと原点からのオフセットを指定します。
//}

//ii //in59見出し

  EWBでは、複数の見出しレベルをサポートしています。各見出しは出現順にカウントされ、番号付けを自動的に行います（第1章、1.2.1など）。各レベルの見出しに対して上位の見出しが設定でき、上位見出しの出現に伴って見出し番号や図表番号が自動的に初期化される仕掛けになっています。

//f010414 見出しの体裁

//iii 入力方法

  見出しトリガ“////i”などの後にスペースを入れ、見出しの内容を入力します（//l010415）。この時、“第1章”などと入力する必要はなく、見出しの内容のみを入れます。また、見出しは1行で書くようにしてください。
  EWBでは見出しの前後にある改行はすべて無視するようになっており、出力時には反映されません。このため、前後のアキなどを意識せずに入力を行うことができます。さらに、見出しの前後に空行を入れられるため、可読性が高められます。

//l010415 見出しの入力

//f010416 見出しによるページ体裁の変更

//iii 補足説明

//k1{
//g{//in60前空き／//in61行取り／//in62後空き//}
//|見出しの前後のアキは、“前空き、行取り、後空き”を上手に組み合わせて指定します。この中の“前空き”は、見出しがページの先頭に位置すると消えてしまいます（//f010414）。一方、“行取り”を使って指定されたアキは、どのような場合でも、必ず一定のアキが取られます。
//g{//in63ページ体裁//}
//|各見出しに基づいて、柱や章扉などといったページ体裁を変更することができます（//f010416）。
//g{//in64見出し禁則//}
//|見出しを出力する時に見出しがページ末にきて、本文が1行も入らなくなってしまった場合には、次のページに移動します（//f010417）。
//f010417 見出し禁則
//g{//in546EPSファイル//}
//|見出しにEPS画像を使用することができます。使用するEPSファイル中に“@n@”や“@str@”といった文字列を入れておけば、その部分がそれぞれ見出し番号、見出し文字列に置き換わって表示されます（//f010420）。
//f010420 EPS画像を使用した見出し
//}

//iii 用語説明

//k1{
//g{//in65問答//}
//|見出しが複数行になってしまい、2行目以降のみを字下げしたい場合に用いるものです（//f010418）。この時の指定は、全角文字の文字数／歯／ポイント／ミリで行います。行揃えが“左”のときのみ有効です。

//f010418 問答の利用

//g{//in66シンボル//}
//|見出しの番号付けに使われる文字は、“アラビア数字（算用数字）、ローマ数字（大文字／小文字）、アルファベット（大文字／小文字）”の中から選ぶことができます（//f010419）。

//f010419 見出しのシンボル
//}

//iii //in551目次

  EWBの目次は、見出しから抽出した情報を集めて、指定した体裁で組まれます（//f0104201）。

//f0104201 目次の体裁

//k1{
//g{//in547リーダ罫//}
//|見出し文字列と見出しページ番号の間の体裁を指定できます。
//g{//in548囲み罫//}
//|目次項目を罫線で囲むことができます。
//g{//in549背景色//}
//|罫線の内側の色を指定できます。
//}

//ii //in68小組

  コラムやリードなどといった本文とは異なる組み方をする場合に使います。小組の種類は必要に応じて増やすことができます。

//f010421 小組の体裁

//iii 入力方法

  小組トリガの入力は、範囲指定で行います。小組にしたい段落の前に開きのトリガ“////c1{”を、小組にしたい最後の段落の後に閉じのトリガ“////c1}”を入力してください（//l010422）。この時、閉じのトリガには、“////}”という省略形を使用することもできます。なお、小組の中に見出しを含むことはできませんので注意が必要です。

//l010422 小組の入力

//f010423 罫線で囲んだ小組の出力

//iii 用語説明

//k1{
//g{//in69改行挿入//}
//|EWBでは、小組の前後に、統一的な決まったアキを入れることを//g{改行挿入//}と呼んでいます（//f010421）。改行挿入を指定すると、小組の前後に入力された改行が無視され、出力時に体裁入力ファイルで指定されたアキが反映されます。また、改行挿入が指定されていない場合には、小組の前後に入力された改行は、そのまま出力に反映されます。
//g{//in550囲み罫//}
//|全体を罫線で囲んだ小組を作ることが出来ます（//f010423）。定義されている囲み罫のトリガ名を指定して使用します。
//}

//ii //in70表組

  表の項目が単純に並んでいるような体裁の表を作成することができます（各項目が連結しているような表は対象外）。表組の種類は必要に応じて増やすことができます。

//f010424 表組の体裁

//iii 入力方法

  表組トリガの入力は、範囲指定で行います。表組にしたい部分の前に開きのトリガ“////table1{”を、表組にしたい部分の後に閉じのトリガ“////table1}”を入力してください。この時、閉じのトリガには、“////}”という省略形を使用することもできます（//l010425、//f010426）。
  表の項目は、//in72タブを利用して区切っていきます。通常、各項目は先頭の行に入力されたタブの位置を基準にして、それに続く行はすべてその位置に揃います。
  さらに、便利な使い方として、表組トリガの//in71オプション指定というものが用意してあります（//l010427、//f010428）。これを利用すると、各項目の幅を数値で指定したり、項目の揃え（左／中／右）を指定したりすることができます。この場合、タブの役割は単純に各項目の区切り記号の意味しか持ちません。

//l010425 表組の入力

//f010426 表組の出力

//l010427 表組の入力（オプション指定）

//f010428 表組の出力（オプション指定）

//iii 補足説明

//k1{
//g{//in73タブ//}
//|表組トリガでは、基本的に、タブを利用して表の項目を区切っていきます（//f010429）。項目の幅指定をしない場合には、指定されたタブ（ハードタブ）の値を使って項目を揃えていきます。この時、タブの値の指定は、表組の文字サイズ（正確には字送り）の倍数となります。

//f010429 タブによる表作成

//g{//in74項目内行送り//}
//|1つの項目が複数行になってしまった時に使用される行送りのことを示します（//f010424）。
//g{//in75項目間隔//}
//|隣合う項目間のアキを指定するものです（//f010424）。
//g{表組の//in76改ページ//}
//|表組トリガで囲まれた部分が途中でページ末に遭遇した場合に、EWBは改ページ可能な位置を探し、表を分割します（//f010430）。このとき、改ページが可能な位置は各項目の境目で、項目の途中では改ページすることはできません。
//f010430 表組の改ページ
//g{囲み罫//}
//|小組と同様に、囲み罫を使用した表を作ることが出来ます（//f010431）。
//}

//f010431 罫線を使った表組

//ii //in77脚注

  脚注トリガには、//in78参照部（本文中にある上付き文字に相当）と//in79定義部（ページ末にある脚注の内容に相当）があります。この両者の関係をEWBシステムに伝えるため、脚注トリガに続いて同じ番号を入力します。ここで入力する番号は原稿整理上で使用するものであり、実際の//in80脚注番号とは無関係なものです。原稿中で、この番号が重ならなければ。どんな順序であっても構いません。EWBでは、この番号を使って参照と定義の関係を解決しながら、自動的に脚注の番号付けをして出力してくれます（脚注の番号付けは見出しと同様に自由）。

//f010432 脚注の体裁

//iii 入力方法

  //in81参照部には、実際に脚注のマーク（上付き文字）が付く場所に、“////ky数字”を入力します。また、//in82定義部は開きのトリガ“////ky{”と閉じのトリガ“////ky}、または////}”の中に脚注の内容を記述します。脚注の内容は、“////ky数字”というトリガの後にスペースを入れて入力します（//l010433）。このトリガは、複数行になっても問題なくページ末に出力されます（//f010434）。

//l010433 脚注の入力

//f010434 脚注の出力

//iii 補足説明

//k1{
//g{//in83罫線本文空き//}
//|ページ末に現れる脚注と本文との最小限のアキを指定する値です（//f010432）。本文と脚注で使われる罫線のアキが、この値より小さくなることはありません。
//}

//ii //in84箇条書

  本文の中に現れる箇条書を指定するトリガです。箇条書の種類は必要に応じて増やすことができます。EWBでは、箇条書項目に対して自動的に番号付けを行いませんので注意が必要です。

//f010435 箇条書の体裁

//iii 入力方法

  箇条書トリガの入力は、範囲指定で行います。箇条書にしたい段落の前に開きのトリガ“////k1{”を、箇条書にしたい段落の後に閉じのトリガ“////k1}”を入力します（//l010436、//f010436）。このとき、閉じのトリガには“////}”という省略形も使用できます。
  また、箇条書トリガの前後にある改行は、小組と同様な処理を施すことができます。

//l010436 箇条書の入力

//f010436 箇条書の出力

//iii 補足説明

//k1{
//g{//in85問答//}
//|箇条書の1つの項目が複数行になってしまい、2行目以降のみを字下げしたい場合に用いるものです（//f010435）。この時の指定は、全角文字の文字数／歯／ポイント／ミリで行います。
//g{//in86項目空き//}
//|“項目空き”とは、箇条書の各項目の行間を指定するための指定項目です（//f010435）。ここで指定されたアキは、箇条書内で指定された行送りにプラスされます。
//g{//in87区切りトリガ//}
//|箇条書項目として用いる記号が種類によっては、指定された問答値と揃わない場合があります。このような時には、区切りトリガ“////|”を箇条書項目で用いる記号の後に入力することで対処します（//f010437）。
//f010437 区切りトリガの利用
//g{囲み罫//}
//|小組と同様に、囲み罫を使用した箇条書を作ることが出来ます。
//}

//ii //in88キャプション

  //in92図表類のトリガは、キャプションを//in90定義する部分とその図表類の番号を//in91参照する部分からなります。この両者の関係をEWBシステムに伝えるために、図表トリガに続いて同じ番号を入力します。ここで入力する番号は原稿整理上で使用するものであり、実際の図表類の番号とは無関係なものです。この番号は重複していなければ、どのような順番であっても構いません。EWBでは、この番号を使って参照と定義の関係を解決しながら、自動的に図表類の番号付けをして出力してくれます。さらに、この図表類の番号には、“図1-1(a)”などといった//in89枝番号を振ることもできるようになっています。

//f010438 キャプションの体裁

//iii 入力方法

  //in93参照部は、実際に図表類の番号を参照する場所に、“////f数字”などを入力してください（//l010439、//f010440）。また、//in94定義部は図表類を入れたい場所に対して、“////f数字”などの後にスペースを入れて、キャプションの内容を記述します。この定義部は1行になるように入力してください。もし、//in95枝番号を付ける場合は、“////f100-a”などといったように半角“-”に続いて半角英数字を入れます（//f010441）。
  図表トリガの前後の改行は出力に反映されませんので、原稿が見やすいように改行をうまく利用することができます。

//l010439 キャプションの入力

//f010440 キャプションの出力

//f010441 枝番号

//iii 補足説明

//k1{
//g{//in96強調の有無//}
//|本文中に現れる図表の参照番号を強調するかどうかの指定を行います。“強調する”、“強調しない”という項目の他に、最初に出てきた参照部を強調し、それ以後は強調しないという“先頭のみ”という指定ができます。
//g{文字列／枝付き文字列//}
//|キャプションの番号付けの方法を記述します。枝番号が付く場合と付かない場合を別々に指定することができます。
//g{//in97前後空き//}
//|図表と本文（あるいはキャプション）のアキを指定します（//f010438）。
//g{図とキャプションの空き//}
//|図表とキャプションのアキを指定します。個々のキャプションに対して、指定することもできます（//f010438）。
//g{図表とキャプションの位置//}
//|キャプションの位置は図に対して“上右、上中、上左、下右、下中、下左、右上、右中、右下、左上、左中、左下”の12種類の中から選ぶことができます。ただし、表やプログラムリストといったテキスト類を図表として扱う場合、右上、右中、右下、左上、左中、左下にキャプションを付けることはできません。この指定は、トリガや体裁入力ファイルで行うのではなく、“//in99物理属性エディタ”と呼ばれるツールを用いて行います（//f010442）。

//f010442 物理属性エディタ
//}

//ii //in100プログラム

  //in101プログラムリストや画面キャラクタイメージを出力するために用意されたものです。欧文は//g{//in102コンスタントピッチ//}（各文字が//in103等幅なもの）書体を使い、タブやスペースを認識するようになっているため、入力した通りの出力を得ることができます。また、プログラムトリガは、標準で1つ用意されていますが、必要に応じて増やすことができます。

//f010443 プログラムの体裁

//iii 入力方法

  プログラムトリガの入力は、範囲指定で行います。プログラムにしたい段落の前に開きのトリガ“////list{”を、プログラムにしたい段落の後に閉じのトリガ“////list}”を入力します。この時、閉じのトリガには“////}”という省略形を使用することもできます（//l010444、//f010445）。
  また、プログラムトリガの前後にある改行は、小組と同様な処理を施すことができます。

//l010444 プログラムの入力

//f010445 プログラムの出力

//iii 補足説明

//k1{
//g{//in104インデント//}
//|プログラムリストのタブストップ値が設定できます（//f010443）。
//g{//in105行番号//}
//|行番号を自動的に発生することができます。行番号に使用する書体は、任意に設定できます。
//g{//in106コメント//}
//|プログラムリスト中に、その行の意味を説明するためにコメントを入れることがあります。EWBでは、これを指定するためのコメントトリガを用意しました。コメントにしたい部分を“////cmt{”と“////cmt}”で囲んでください。このトリガでは、書体や級数の指定もできます（//f010443）。
//g{囲み罫//}
//|小組と同様に、囲み罫を使用したプログラムリストを作ることが出来ます。
//}

//ii //in107キートップ

  本文中に現れるキーボードのキートップを指定するために用意されたものです。キートップにしたい文字列を罫で囲みます。キートップの角は“直角”と“角丸”から選ぶことができ、2段で出力することもできます（//f010446）。キートップトリガは、標準で3つ用意してありますが、必要に応じて増やすことができます。

//f010446 キートップの体裁

//iii 入力方法

  キートップにしたい文字列を“////key1{”と“////key1}”を使って囲みます。この時、閉じのトリガには省略形“////}”を使うこともできます。また、2段のキートップを指定したい場合には、“////key1{ROLL////|UP////}”といったように、区切りトリガ“////|”を使って上下に置く文字列を区切ります（//l010447、//f010448）。
  キートップトリガは、文字列の長さに応じて幅が変化しません。多種類のキートップがある場合には、事前に複数のキートップを設計することをお勧めします。

//l010447 キートップの入力

//f010448 キートップの出力

//ii //in108罫線

  水平方向の罫線を発生するものです（//f010450）。プログラムリストや表組などといった要素と組み合わせて使用すると有効的です。罫線トリガは必要に応じて増やすことができます。

//f010450 罫線の体裁

//iii 入力方法

  罫線を入れたい場所に、“////kei”を入力します（//l010451、//f010452）。前後に入力した改行は出力に反映されますので、罫線トリガのアキを活用したい時は、改行を取り除いてください。

//l010451 罫線の入力

//f010452 罫線の出力

//ii //in552囲み罫

  文章を罫線で囲みます。長い文章の場合は、途中で改ページさせることも可能です。囲み罫トリガは必要に応じて増やすことができます。

//f0104580 囲み罫の体裁

//iii 入力方法

  囲み罫は、範囲指定で行います。罫線で囲みたい段落の前に開きのトリガ“////w1{”を、囲みたい段落の後に閉じのトリガ“////w1}”を入力します（//l010458、//f010459）。この時、閉じのトリガには“////}”という省略形を使用することもできます。

//l010458 囲み罫の入力

//f010459 囲み罫の出力

//iii 補足説明

//k1{
//g{//in553角半径//}
//|囲み罫の四隅を丸める場合の半径を指定します（//f0104580）。0を設定すれば直角になります。
//g{罫線太さ//}
//|上下左右の罫線の太さをそれぞれ指定します（//f0104580）。
//g{//in554罫線色//}
//|罫線の色をCMYK形式で指定します。
//g{//in555背景色//}
//|罫線で囲まれた範囲の地の色をCMYK形式で指定します。
//g{//in556ページ分割//}
//|囲まれた文章がページからはみ出る場合に、途中で改ページして分割するかどうかを指定します。
//}

//ii //in557ルビ

  文章に読み仮名等のルビを振ります。ルビトリガは必要に応じて増やすことができます。

//f0104590 ルビの体裁

//f0104591 ルビの左右揃え

//iii 入力方法

  漢字部と読み仮名部を“////rb1{”と“////rb1}”を使って囲みます。このとき、漢字部分と読み仮名を“////rb1{漢字,かんじ////rb1}のように“,”で区切って入力します（//l010460、//f010461）。閉じのトリガには省略形“////}”を使うこともできます。

//l010460 ルビの入力

//f010461 ルビの出力

//iii 補足説明

//k1{
//g{本文ルビ空き//}
//|本文とルビ文字の空きを指定します（//f0104590）。
//g{ルビ級数比率//}
//|本文文字に対するルビ文字の大きさを比率で指定します（//f0104590）。
//g{揃え//}
//|本文文字とルビ文字をどこで揃えるかを指定します。左／中／右が指定できます（//f0104591）。
//g{//in558食い込み//}
//|ルビが本文より長い場合に、ルビ文字を前後の本文のどこまで重ねるかを指定します。食い込み量は本文の文字数で指定します。
//}

//ii //in559傍点

  文章に１文字ずつ傍点を振ります。傍点トリガは必要に応じて増やすことができます。

//f0104610 傍点の体裁

//iii 入力方法

  傍点を振りたい部分を“////bou1{”と“////bou1}”を使って囲みます（//l010462、//f010463）。閉じのトリガには省略形“////}”を使うこともできます。

@@clearpage()

//l010462 傍点の入力

//f010463 傍点の出力

//iii 補足説明

//k1{
//g{//in560傍点文字//}
//|傍点として出力する文字を指定します。
//g{本文傍点空き//}
//|本文と傍点文字の空きを指定します（//f0104610）。
//g{傍点級数比率//}
//|本文文字に対する傍点文字の大きさを比率で指定します（//f0104610）。
//g{傍点位置補正//}
//|傍点の位置を字送り方向に調整します。
//}

//ii //in525ハイパーリンク

  WEBサイト等への//in526URLを記述します。最終出力をPDFへ変換するとリンクが有効になり、URL文字列をクリックするとリンク先にジャンプします。

//iii 入力方法

  リンク先として記述するURLを“////url{”と“////url}”を使って囲みます。閉じのトリガには省略形“////}”を使うこともできます。このトリガで囲まれた部分は自動改行ができません。プレビュー等で行末の状態を確認し、改行が必要であれば、トリガ中の改行したい場所に“@@@@break()”を入れて強制的に改行させてください。

//ii //in109索引

  EWBには、索引を自動生成する機能があります。EWBは本文を組んだ結果を元に、索引に入れる項目とページ番号を自動的に抽出し、索引を作成します。
  この索引を作成する作業は、通常の本文ページを作成する作業とは異なり、独立した工程になります。

//iii EWBの索引作成

  まず原稿ファイル中で、索引項目としてピックアップしたい単語に対して、“索引トリガ”を入力します。この索引トリガとは、「この単語を索引にしたい」という印になるわけです。そして、実際の索引項目や読み入力などは、“//in110索引入力エディタ”と呼ばれる専用ツールを用いて行います。この入力結果は、“索引ファイル”と呼ばれる原稿ファイルとは異なるファイルに収められます（//f010454）。

//f010454 EWBの索引作成

  また、索引の体裁に関しては、本文と異なる“//in111索引体裁入力ファイル”に記述します。このファイルの内容は、段間のアキやリーダー罫の種類などといった索引固有の項目が、通常の体裁入力ファイルに付加されたものです。
  EWBでは、これら3つのファイルを読み込んで、索引ページを自動的に作成します（//f010453）。

//f010453 EWBの索引体裁作成

//iii 索引トリガ

  索引トリガは、原稿中に索引項目としてあげたい単語に対して、“////in数字”を入力します。このトリガの入力規則は、図表トリガなどと同様です。

//iii //in112索引入力エディタ

  実際の索引項目やソートに使う読みなどは、索引入力エディタを使用して入力します（//f010456）。このエディタは原稿ファイルを読み込んで、入力された索引トリガを元に、会話式に必要なデータを入力していくもので、原稿の修正などは一切できないようになっています。

//f010456 索引入力エディタ

//iii 索引の体裁

//f010457 索引の体裁

//k1{
//g{//in113段数//}
//|2段組などの多段組ができるようになっています。
//g{//in114カラム//}
//|多段組にした場合のカラム間のアキ（段間のアキ）が指定できるようになっています（//f010457）。また、カラム間に引く罫線の太さ（段間罫）も指定できます。
//g{ページ番号//}
//|索引項目に対するページ番号は、通常に使用する書体の他に、ボールド、イタリックの指定もできます。
//g{//in115レベル//}
//|索引項目のレベルを3種類設定できます。それぞれのレベルに対して、異なる体裁を指定できるようになっています。
//}
