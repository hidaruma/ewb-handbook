Chapter 7
//ai コマンド@@hbreak()リファレンス

//aii EWB内部コマンド一覧

//aiii //in479EWB-Shelf―原稿セット管理プログラム

//list{
book -h     ヘルプを表示する
book -help  もうすこし詳しいヘルプ
book        原稿セットの状態を表示する
//}

//table[l(18w)l]{
book add ファイル名	新しい原稿を原稿セットの一番最後に追加する
book addmulti ファイル名 ファイル名 ファイル名...	複数の原稿を一度に追加する
book 原稿番号 insert ファイル名	新しい原稿を指定した原稿番号に挿入する
book move 原稿番号1 原稿番号2	原稿番号1の原稿を原稿番号2の原稿の位置に移動する
book exchange 原稿番号1 原稿番号2	原稿番号1と原稿番号2の原稿の位置を交換する
book delete 原稿番号	原稿番号の原稿の登録を削除する
book 原稿番号 page ページ番号	原稿の開始ページ番号を指定する
book 原稿番号 page -	原稿が継続ページであることを指定する
book 原稿番号 style スタイルファイル名	スタイルファイルを指定する
book 原稿番号 style -	スタイルファイルの設定を元(ewb2latex.cls)に戻す
book 原稿番号 {phy|usephy}	物理属性ファイルを使うことを宣言する
book 原稿番号 nophy	物理属性ファイルを使わないことを宣言する
book 原稿番号 {index|useindex}	索引ファイルを使うことを宣言する
book 原稿番号 noindex	索引ファイルを使わないことを宣言する
book 原稿番号 tex 数	//TeXを行う回数を指定する
book form 用紙サイズ	プリンタの出力用紙サイズを指定する@@hbreak()用紙サイズにはB5、A4、B4、A3が指定可能@@hbreak()用紙サイズの後ろにWを付加することで見開き印刷となる@@hbreak()1回設定すると、ログアウトするまで設定が保存される
book -d	環境変数PATHをEWB操作前の状態に戻す
本体名.dvi	本体名の原稿からEPS画像を含まないdviファイルを作成する
本体名.Dvi	本体名の原稿からEPS画像を含むdviファイルを作成する
本体名.DVI	本体名の原稿から面付け用のdviファイルを作成する
本体名.PS	本体名の原稿からEPS画像を含むPostScriptファイルを作成する
本体名.out [出力ページ] [プリンタ名]	本体名の原稿をプリンタから出力する。EPS画像は出力しない。出力ページの指定には、継続ページを表す“-”(半角ハイフン)と、複数ページを表す“ ”(半角スペース)が使える
本体名.OUT [出力ページ] [プリンタ名]	本体名の原稿をプリンタから出力する。EPS画像も出力する。出力ページの指定には、継続ページを表す“-”(半角ハイフン)と、複数ページを表す“ ”(半角スペース)が使える
本体名.pre [出力ページ] [端末名]	本体名の原稿をプレビューする。EPS画像は表示しない
本体名.PRE [出力ページ] [端末名]	本体名の原稿をプレビューする。EPS画像も表示する
本体名.phy	本体名の原稿に対して物理属性の入力を行う
本体名.index	本体名の原稿に対して索引項目の入力を行う
本体名.cln	本体名の原稿の作業ファイルを削除する
ALL.PS	すべての原稿を面付けしたPostScriptファイルを作成する
ALL.PDF	PDF用のリンク情報付きPostScriptファイルを作成する
ALL.pdf	ページを選択してリンク無しPDF用のPostScriptファイルを作成する
ALL.out [折り番号]	面付けしたPostScriptファイルを縮小してプリンタ出力する
ALL.cln	面付けしたPostScriptファイルを削除する
dvi	原稿セットに登録されたすべての原稿のdviファイルを作成する。EPS画像は含まない
Dvi	原稿セットに登録されたすべての原稿のdviファイルを作成する。EPS画像を含む
DVI	原稿セットに登録されたすべての原稿の面付け用dviファイルを作成する
PS	原稿セットに登録されたすべての原稿のPostScriptファイルを作成する。EPS画像を含む
out [プリンタ名]	原稿セットに登録されたすべての原稿をプリンタから出力する。EPS画像は出力しない
OUT [プリンタ名]	原稿セットに登録されたすべての原稿をプリンタから出力する。EPS画像も出力する
pre [端末名]	原稿セットに登録されたすべての原稿をプレビューする。EPS画像は表示しない
PRE [端末名]	原稿セットに登録されたすべての原稿をプレビューする。EPS画像も表示する
phy	phyの宣言をしたすべての原稿の物理属性の入力を行う
index	indexの宣言をしたすべての原稿の索引項目の入力を行う
cln	原稿セットに登録されたすべての原稿の作業用ファイルを削除する
//}

//aiii //in480ewb2latex―トリガ解析フィルタ

//list{
ewb2latex [オプション] EWB文書ファイル

起動時オプション
　　-h               ヘルプ表示
　　-n               ファイルがplain text
　　-N               面付け用//LATEXファイルを出力
　　-e               dvipsでEPSファイルを読み込まない
　　-f <ファイル名>  トリガ定義ファイルの指定 (指定しなければ ./triger.def)
　　-s <ファイル名>  スタイルファイルの指定 (指定しなければ ./ewb2latex.sty)
　　-l <ファイル名>  ログファイルの指定 (指定しなければ標準エラー出力)
　　-o <ファイル名>  出力ファイルの指定 (指定しなければ標準出力)
　　-p <ファイル名>  物理属性ファイルの指定
　　-I <ファイル名>  インデックスファイルの指定
　　-T <ファイル名>  インデックステンポラリファイルの指定
　　-S <ファイル名>  見出しテンポラリファイルの指定
　　-P <番号>        先頭ページの設定
　　-y               EWB-shelfから使用する
//}

//aiii //in483past―物理属性エディタ

//list{
past [オプション] EWB文書ファイル

起動時オプション
　　-h  簡単なヘルプ
　　-n  物理属性ファイルがすでに存在しても読み込まない
　　-p  物理属性ファイル	物理属性ファイルを指定する
　　-o  物理属性出力ファイル	出力するファイルを指定する
　　-t  トリガファイル	トリガファイルを指定する
//}
  “-p”で物理属性ファイルを指定しない時には、一番目の原稿ファイルの名前のサフィックスをphyに変えたものを物理属性ファイルの名前として使います。
  一度、物理属性ファイルを作っておけば、次からは物理属性ファイルだけ指定すれば原稿のファイルは勝手に読んできます。

//iiii キー操作
//k1{
//g{リスト画面//}
//table[l(10w)]{
上矢印、k	上方向へのカーソル移動
下矢印、j	下方向へのカーソル移動
スペーキー	マークの反転@@hbreak()マークが付いている場合はマークを消し、マークが付いていない場合はマークを付ける@@hbreak()原稿ファイル名の行で、スペースを押すとすべての行のマークを反転できる
a	すべての行にマークを付ける
u	すべての行のマークを消す
r	一度、編集した行(+が付いている行)にマークを付ける
RETURN	マークした行の編集開始
e	カーソルのある行にマークを付けて編集を開始
s	物理属性ファイルへの保存
q	物理属性エディタの終了
Y	コピー@@hbreak()カーソルのある行の内容を一時的に記憶する。ペーストと組み合せて使う
P	ペースト@@hbreak()マークを付けた行にコピーで記憶しておいた内容をコピーする。この時、特定の項目のみを選んでコピーできる
//}
//g{メニュー画面//}
//table[l(10w)]{
上矢印、k	上方向へのカーソル移動
下矢印、j	下方向へのカーソル移動
リターンキー	下方向へのカーソル移動、項目の実行
右矢印、l、ctrl-F	選択するフィールドでの項目の選択(右)
右矢印、h、ctrl-B	選択するフィールドでの項目の選択(左)
スペースキー	文字列を入力するフィールドの場合、入力開始@@hbreak()選択するフィールドの場合は項目の選択
ctrl-N@@hbreak()N RETURN	次のページへ移動
ctrl-P@@hbreak()P RETURN	前のページへ移動
ESC	リスト画面へ戻る
//}
//g{文字列を入力するフィールド//}
//table[l(10w)]{
左右矢印	カーソル移動
BS(バックスペース)	文字の消去
ctrl-G	文字の消去
リターンキー	文字列の確定
上下矢印	文字列の確定とフィールドの移動
ESC	入力の取消し
//}
//}

//aiii //in484idxed―索引入力エディタ

//list{
idxed [オプション] EWB文書ファイル

起動時オプション
　　-h               ヘルプ表示
　　-t <ファイル名>  トリガ定義ファイル名(指定しなければ triger.def)
　　-i <ファイル名>  インデックスファイル名
//}

//iiii キー操作

//k1{
//g{索引入力画面//}
//table[l(10w)]{
上下矢印	着目フィールドの動移
スペースキー	着目モードに修正モードでの入力開始
ctrl-E	終了
ctrl-W	保存
ctrl-N	次の画面
ctrl-P	前の画面
ctrl-R	検索モードに入る。検索したい文字列を入力してRETURNキーで検索開始
その他の文字	着目フィールドへの入力開始
//}

//g{文字列を入力するフィールド//}
//table[l(10w)]{
左右矢印	カーソル移動
BS(バックスペース)	文字の消去
ctrl-G	文字の消去
リターンキー	文字列の確定
ESC	入力の取消し
//}
//}

//aiii //in485dvips−DVIファイルをPostScriptファイルへ変換

//list{
dvips [オプション] DVIファイル

主な起動時オプション
　　-f               フィルタ動作モードにする
　　-o <ファイル名>  出力ファイルの指定
　　-t <用紙形式>    出力用紙サイズの指定
　　-D <数値>        解像度の指定(dpi)
　　-E               EPSファイルとして出力する
//}

//aiii //in486ghostview―PostScriptファイルを表示

//list{
ghostview [オプション] PSファイル

主な起動時オプション
　　-dpi <数値>             解像度を指定する
　　-portrait               縦長画面で表示
　　-landscape              横長画面で表示
　　-{letter|tabloid|a3|a4|a5|b4|b5}
                            用紙サイズを指定する
　　-page <数値>            開始ページを指定する
　　-geometry <ジオメトリ>  表示ウィンドウの座標、大きさを指定する
　　-display <端末名>       出力する端末名を指定する
//}

//iiii キー操作

//table[l(10w)]{
q	終了
スペースキー	次のページへ移動
b	前のページへ移動
k	上
j	下
h	左
l	右
//}

  キーボード以外のデバイスとしてマウスが使用でき、ボタンは以下のような割り当てになっています。
//table[l(10w)]{
右／左ボタン	拡大
中ボタン(または左右ボタンの同時押し)	ページ番号をクリックでそのページへジャンプ
//}

  なお、設定によってはghostviewを起動しても実際には“gv”というプログラムが起動する場合があります。gvでもghostviewと同様にPostScriptファイルの閲覧ができますが、キーボード／マウスの操作が若干異なります。

//table[l(10w)]{
q	終了
f	次のページへ移動
b	前のページへ移動
矢印上下左右	ページのスクロール

右／左ボタン	ページのスクロール@@hbreak()ページ番号をクリックでそのページへジャンプ
中ボタン(または左右ボタンの同時押し)	範囲を指定して拡大
//}

//aiii //in515pspr―PSフォントを変換して印刷

//list{
pspr [オプション] PSファイル

主なオプション:
	-P <プリンタ名>
	-f <ファイル名>  フォント変換リストファイル
	-s <数値>        左右マージン(mm)
	-b5 または -B5   B5用紙に印刷
	-a4 または -A4   A4用紙に印刷
	-b4 または -B4   B4用紙に印刷
	-a3 または -A3   A3用紙に印刷
		用紙サイズの後ろに“w”または“W”を付加すると2ページ見開きで印刷
	-t	縦書きモード（見開き印刷時に奇数/偶数ページを左右逆にする）
//}

  フォント変換リストファイルの内容に従ってPSファイル内のフォントを置換し、プリンタへ出力します。
  フォント変換リストファイルは/usr/local/ewb/3.3/psfontaliasで、内容は
//list{
置換元PSフォント名   置換先PSフォント名
//}
のリストになっています(区切りはタブまたはスペース)。
  たとえばプリンタにリュウミン-Rがインストールされていない場合、フォント変換リストファイルに
//list{
Ryumin-regular-H   Ryumin-Light-H
Ryumin-regular-V   Ryumin-Light-V
Ryumin-regular-RKSJ-H   Ryumin-Light-RKSJ-H
Ryumin-regular-RKSJ-V   Ryumin-Light-RKSJ-V
Ryumin-regular-83pv-RKSJ-H   Ryumin-Light-83pv-RKSJ-H
//}
と記述しておけばリュウミン-Rをリュウミン-Lに変換して印刷します。

//aiii //in487psmentuke−面付けプログラム

//list{
psmentuke [オプション] 入力ファイル名

起動時オプション
　　-h               ヘルプ表示
　　-o <ファイル名>  出力ファイルの指定 (指定しなければ標準出力)
　　-f <ファイル名>  面付け情報ファイルの指定
　　-8               折り単位を16ページ単位、面付け単位を8ページにする
                     (指定しなければ16ページ折り、4ページ面)
　　-4               折り単位を8ページ単位、面付け単位を4ページにする
　　-s               折りごとに分割してファイルに出力する (“-o”と共に使用)
　　-S               面ごとに分割してファイルに出力する (“-o”、“-s”と共に使用)
　　-X <数値>        ページの幅を明示的に指定する(mm)
　　-Y <数値>        ページの高さを明示的に指定する(mm)
　　-x <数値>        横方向のオフセットを指定する(mm)
　　-y <数値>        縦方向のオフセットを指定する(mm)
　　-r               90°回転して出力する
　　-L               左ページから面付け開始(縦書き)
　　-M               無線綴じ用として面付けする
　　-d               DVIファイルを元に面付けする
                     (指定しなければPSファイルを元にする)
　　-c               日付をチェックして出力する
　　<番号>           出力する折り番号を指定する
　　-T               書名を指定する
//}

  面付け情報ファイルには以下のパラメータがあります。

//table[l(7w)l(12w)l]{
//bkei
//g{パラメータ//}	//g{意味//}	//g{指定項目//}
//tkei
組方向	本文の組方向	縦/横
折り単位	1折りあたりのページ数	8/16
面付け単位	1面あたりのページ数	4/8
無線綴じ	無線綴じの断ちしろの有無	有り/無し
タイトル	本のタイトル
末尾折り補正	最後の折りを中途半端な折りにしないための補正	有り/無し
ファイル分割	面付けファイルの分割単位	折り/面
面付けサイズ	面付けフィルムのサイズ	指定無し/A4/B4/A3/B3/A2/B2/A1/B1/トンボサイズ
//bkei
//}

//aiii //in662mamehon−面付けPSファイルを縮小して印刷

//list{
mamehon [オプション] 面付けPSファイル名

起動時オプション
　　-P <プリンタ名>
    -a4 または -A4    A4用紙に印刷
    -b4 または -B4    B4用紙に印刷
    -a3 または -A3    A3用紙に印刷(デフォルト)
//}

  psmentukeで作成された面付け済みPSファイルをプリンタに出力します。
  面付けすると通常のプリンタでは版面が用紙からはみ出してしまうので、用紙サイズに合わせて縮小されます。

//aiii //in542gettoc―目次を生成

//list{
gettoc
//}

  EWB文書から目次を生成するためのツールです。トリガ定義ファイルとEWB文書として登録されているファイルから抽出したデータでcontents.ewbというファイルを生成します。
  トリガ定義ファイルとスタイルファイルには、目次に加える見出しレベルについてトリガおよびマクロの記述が必要です。
  また、あらかじめEWB文書ファイルを全て組版し、見出しを抽出しておかなければなりません。
  以上の準備ができたら作業ディレクトリでgettocを実行し、作成されたcontents.ewbをbookコマンドでEWB文書として登録します。

//aiii //in663mksiori−PDF用のしおり情報ファイルを作成

//list{
mksiori [オプション]

起動時オプション
　　--h  ヘルプ表示
//}

  EWBの作業ディレクトリで mksiori を実行すると“siori.dat”というPDF用のしおり情報ファイルがそのディレクトリに作られます。
  siori.datにはすべての見出しレベルがしおりとして書き出され、ALL.PDF実行時に参照されます。

@@clearpage()
//aii 補助コマンド一覧

//aiii //in481pssted―本文用スタイルファイル作成

//list{
pssted [-h] [-s] [-t] [-j] 本文用体裁ファイル

起動時オプション
　　-h  ヘルプ表示
　　-s  スタイルファイルを生成しない
　　-t  トリガ定義ファイルを生成しない
　　-p  PDFスタイルファイルを生成しない
//}

  本文用のスタイルファイル、トリガ定義ファイル、PDF用スタイルファイルを生成します。
  作成されるスタイルファイル名はewb2latex.cls、トリガ定義ファイル名はtriger.def、PDF用スタイルファイル名はPDFstyleです。

//aiii //in482psidxsted―索引用スタイルファイル作成

//list{
psidxsted [オプション] 索引用体裁ファイル

起動時オプション
　　-h  ヘルプ表示
　　-s  スタイルファイルを生成しない
　　-i  インデックススタイルファイルを生成しない
//}

  索引用のスタイルファイル類を生成します。
  作成されるスタイルファイル名はindex.clsおよびindexstyです。

//aiii //in488tounix, //in489tomac, //in490todos―テキストコード変換プログラム

//list{
tounix ファイル名
ファイルの漢字コード、改行コードをUNIX用に変換します。

tomac ファイル名
ファイルの漢字コード、改行コードをMacintosh用に変換します。

todos ファイル名
ファイルの漢字コード、改行コードをDOSおよびWindows用に変換します。
//}

  ファイル名は複数書くことができます。
  これらのコマンドは変換したファイルを元のファイルに上書きするので注意してください。

//aiii //in491epscheck―EPSファイルチェックプログラム

//list{
epscheck EPSファイル名
//}

  EPSファイルの形式がテキスト形式、改行コードがUNIX形式になっているかをチェックします。また、ヘッダ部分に漢字が入っていれば漢字コードがEUCになっているかチェックします。
  ファイル名は複数書くことができます。

//aiii //in492fontscan―PSファイル中のフォント名一覧を表示

//list{
fontscan PSファイル名
//}

  EWBで作成されたPSファイルの中で使用されているフォント一覧を表示します。
  ファイル名は複数書くことができます。

//aiii //in516jfontadd―EWBで使用する和文フォントを追加

//list{
jfontadd PSフォント名  VF用TFM名  ファミリ名  ウエイト
//}

  和文フォントをEWBで扱えるようにするためにTFMとVFを作成し、フォントとしてEWBシステムに登録します。
  このスクリプトでフォントの実体がインストールされるわけではありません。実際に出力されるフォントは出力デバイスに依存します。

//k1{
・//|PSフォント名は Ryumin-Light のようにフォント固有部分のみ、-RKSJ-H等はつけない
・//|VF用TFM名は ryumin-l のように区別できる適当な名前
・//|ファミリ名は rmn のように3〜4文字程度
・//|ウエイトは l,r,m,b,h,u のような太さを表す文字
//}

//aiii //in517efontadd―EWBで使用する欧文フォントを追加

//list{
efontadd PSフォント名  AFM名  ファミリ名  ウエイト シェイプ
//}

  EWBで使用する欧文フォントを追加するためのスクリプトです。
  欧文フォントをEWBで扱えるようにするためにTFMを作成し、フォントとしてEWBシステムに登録します。
  このスクリプトでフォントの実体がインストールされるわけではありません。実際に出力されるフォントは出力デバイスに依存します。
  TFM作成するためのデータとしてAFMという文字幅および高さを記述したファイルが必要です。AFMはPSフォントファイルを元にMacintosh上でFontographerというソフトを使って作成できます。

//k1{
・//|AFMファイルは必ず拡張子が.afmで、AFM名には拡張子を付けずに記述
・//|ファミリ名は tmr のように3〜4文字程度
・//|ウエイトは l,r,m,b のように太さを表す文字
・//|シェイプは it,sl,sc のように変形を表す文字。変形なしは n を記述
//}

//aiii //in543eword―英単語およびカタカナ語の抽出

  文章中の英単語またはカタカナ語を抽出します。
  抽出した単語一覧を uniq , sort フィルタに掛けることで文章中の用語統一を図ることができます。
  ////で始まるEWBトリガは無視します。

//list{
eword [オプション] 入力ファイル名

起動時オプション
    -e               英単語のみ抽出
    -k               カタカナ語のみ抽出
	-o <ファイル名>  出力ファイルを指定
//}

//k1{
・//|英単語は英字またはアンダースコア(_)で始まり、英字、数字、アンダースコア、ピリオド(.)、マイナス(-)が続く2文字以上の半角文字のみの文字列。
・//|カタカナ語はカタカナで始まり、カタカナ、中黒(・)、音引き(ー)が続く全角文字のみの文字列。
・//|EWBトリガは無視する。
//}
