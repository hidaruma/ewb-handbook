%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (f020710.eps)
%%CreationDate: (Wed Aug  4 15:05:21 1999)
%%BoundingBox: 0 0 215 162
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 215 162
userdict begin
%%BeginData:
DisplayImage
0 0
215.238098 161.904770
12
113 85
1
0
0
12
000000
4d4d4d
666666
737373
0000cd
cd0000
999999
bfbfbf
cccccc
e5e5e5
e6e6e6
ffffff
0a00076f0a00076f0a00076f0a00076f0a00076f0a00076f0a00076f0a00076f0a000703
0105070201010703010207110105070401010702010107110104070a0102070301020709
0a0007030101070601010704010107110101070801010702010107030101070b01010701
01010708010107000101070101010700010107080a0007030101070d0101071101010708
010107080101070b0101070101010708010107040101070b0a0007030101070501020704
010107030103070901010705010407010102070201040709010107010101070001010701
0101070101010704010107040103070101000a0007030104070301010704010107020101
070101010708010407010101070101010702010107030101070b01040701010107010101
07000103070201030702010107010101070001000a000703010107060101070401010702
01050708010107040101070101010702010107030101070b010107010101070001010701
0101070101010704010107030105070001000a0007030101070601010704010107020101
070c010107040101070101010702010107030101070b0101070101010700010107010101
070101010704010107030101070401000a00070301010706010107040101070201010701
010107080101070401010701010107020101070301010700010107080101070101010700
01010701010107010101070401010703010107010101070001000a000703010107040105
070001050701010307090105070101040700010507020102070901040702010407010101
0704010107040103070101000a00076f0a00076f0a00076f0a00076f0a00076f0a0003e0
00700a9303000a2303000a2303000a03072003010a01072003010a01072003010a010700
0a00072003010a01072003010a01072003010a0107000a0007090009070c03010a010720
03010a01072003010a0107000a00070900000b070001070b03010a010707001107060301
0a0107060004071403010a0107000a00070900000b07000006000000070a03010a010707
0000060100000909000006010000070603010a010705000107020001071303010a010700
0a00070900000b07000006010000070903010a0107070000060100000909000006010000
070603010a01070400010704000107090002070503010a0107000a00070900000b070004
070803010a0107070000060100000909000006000001070603010a010704000007060000
0707000109010001070403010a0107000a00070900000b0b0000070803010a0107070000
060100000909000006010000070603010a01070400010704000207040001090100010706
03010a0107000a00070900000b0b0000070803010a010707000006010000090900000601
0000070603010a01070500010702000407020004070803010a0107000a00070900000b0b
0000070803010a0107070000060100000909000006010000070603010a01070600040702
0005070b03010a0107000a00070900000b0b0000070803010a0107070000060100000909
000006010000070603010a01070f00000b000000070d03010a0107000a00070900000b0b
0000070803010a0107070000060100000909000006010000070603010a01070600040702
0005070b03010a0107000a00070900000b0b0000070803010a01070700000601000b0601
0000070603010a01070500010702000407020004070803010a0107000a00070900000b0b
0000070803010a0107070000060f0000070603010a010704000107040002070400010901
0001070603010a0107000a00070900000b0b0000070803010a0107070000060f00000706
03010a0107040000070600000707000109010001070403010a0107000a00070900000b0b
0000070803010a01070700000601000b06010000070603010a0107040001070400010709
0002070503010a0107000a00070900000b0b0000070803010a0107070000060100000206
00000901000006010000070603010a010705000107020001071303010a0107000a000709
00000b0b0000070803010a01070700000601000002060000090100000601000007060301
0a0107060004071403010a0107000a00070900000b0b0000070803010a01070700000601
0000020600000901000006010000070603010a01072003010a0107000a000709000d0708
03010a010708000006000000020600000901000006010000070603010a01072003010a01
07000a00072003010a010709000f070603010a01072003010a0107000a00072003010a01
072003010a01072003010a0107000a00072003010a01072003010a01072003010a010700
0a00072003010a01072003010a01072003010a0107000a00072003010a01072003010a01
07140000070a03010a0107000a0007080002071403010a0107080002071403010a01070a
000207060000070a03010a0107000a000707000007020000070000020702000007010002
070603010a010707000007030001070100000701000007010000070803010a0107090000
07020000070000000700000007000002070903010a0107000a0007070000070200000700
00000701000007000000070000000700000007010000070503010a010707000207030000
07000000070100000700000007000000070703010a010709000007040000070000000701
0000070a03010a0107000a00070700000702000007000000070100000700000207000000
07010000070503010a01070a000007000002070000000701000007000002070703010a01
07090000070400000700000007010000070a03010a0107000a0007070000070200000700
000007010000070000000702000007010000070503010a01070a00000700000007000000
070000000700000007010000070903010a01070900000702000007000000070000000701
0000070a03010a0107000a00070800020701000207020001070000000701000007050301
0a010707000207010001070000000700000007030001070703010a01070a000207020001
07010000070a03010a0107000a00070d0000071103010a01072003010a01072003010a01
07000a0003220a0103220a0103220a0103240a0003230a0003230a00030108ff08ff0836
05090866050908480402081a05090800040108440400080204000819050908010400081c
040008250400080404000818050908010400081c0400082b040008180502080205000800
050108010400080004020805040208040401080004020802040608050402080404020800
040208120400081805010800050208010501080104010802040008030400080204000804
040108020400080304000808040008020400080504010802040008100400081905000800
050408000501080104000803040008070400080404000804040008020400080704000804
04000804040008140400081a050008000507080104000803040008030404080404000804
040008020400080704060804040008130400081b05000800050708010400080304000802
04000803040008040400080404000802040008070400080a040008120400081c05010800
050308000501080104000803040008020400080304000804040108020400080304000803
040008030400080304000804040008110400080304000818050208030502080004020801
040208020403080004000803040008000402080504030805040308030405080d04060818
050908150400084f050908150400084f05090814040308ff087b00040804000a08010001
0812040008080400083700020800000008000002080c0000080000000801000008020005

%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 215 162
%%EOF
