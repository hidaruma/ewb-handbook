chapter 3
//i トリガの役割り

  従来の方式では、編集や組版上の指定を紙と鉛筆で行ってきました。同じことをEWBでは、原稿に電子的な印を付けることで実現します。この印のことをEWBでは、//g{//in28トリガ//}（trigger）と呼びます。このtriggerという単語には“引き金”という意味がありますが、トリガと呼ぶ本当の意味付けは、単なる組版の命令ではなく、著者や編集者の思考の助けとなり、コミュニケーションの“引き金”になるということから由来しています。
  たとえば、著者が編集者に対して、強調したい単語などに印を付け意思表示をする場合に、独自で決めた記号では、なかなか意味を理解するのは難しいのものです。トリガの本来の目的は、このような時に、間違いなくコミュニケーションができるように記号を規格化し、意志伝達をスムースにできるようにと用意されたものなのです。
  ここでは、トリガとは一体どのようなものなのかを明らかにし、EWBの本質を理解していただきます。

//ii トリガとは何か？

  コンピュータ上で、マーカーの代わりとなるトリガは、どのような決まり事があり、どのような効果が期待できるのでしょうか。

//iii トリガは約束ごと

  EWBのトリガは、各要素を直接マークアップできるように原稿中に入力します。そのため、どんなワープロやエディタを使っていても入力しやすいように、トリガは特殊な記号ではなく数個の記号と英数字からなる文字列で構成されています。たとえば、節見出しのトリガは、//l010301のように入力します。

//l010301 節見出しトリガの入力

  リストの中にある“////”は、「これからトリガが始まります」という意味を表す記号です。これを、//g{//in29トリガ開始文字列//}と呼んでいます。さらに、それに続く“ii”がトリガの本体にあたる部分で内容を示しています。
  トリガは、過去のアスキーの出版物を基準に要素を洗い出し、11種類のトリガをあらかじめ用意してあります。//t010301は、EWBで標準で使えるトリガの一覧です。

//t010301 標準トリガ一覧表

  この表を見てみると、トリガの種類が少ないと感じるかもしれません。しかし、実際に出版されている大半の書籍において、これらのトリガでも多いぐらいなのです。見出しや強調、さらに図表など数種類のトリガで作成されてしまった例もあります。
  トリガ開始文字列やトリガの本体は、状況に合わせて自由に変更することができます。また、標準トリガで対応できない場合は、トリガの種類を増やす仕掛けも用意してあります。しかし、あまり無計画にトリガを改変したりすると、可読性が低下し、混乱の元になりがちなので注意が必要です。
  一般的に、トリガの種類をいたずらに増やすよりも、本の各要素をなるべく絞って表現した方が、読みやすいものになるといえるかもしれません。どうしてもトリガの種類が増えてしまうような場合は、「EWB向きではない」と判断した方がよいでしょう。

//iii トリガの入った原稿を覗いてみる

  原稿にトリガを入力していくことを“EWBコーディング”と呼びます。ここでは、EWBコーディングした原稿を使って、トリガ入力の方法を簡単に説明していきます。まずは、トリガ入力というものがどのようなものなのかということを覚えてください。EWBのコーディング例を眺めてみると、トリガ入力が意外に簡単で、原稿の構成がはっきりと見えてくることがわかります（//l010302）。

//l010302 EWBコーディングした原稿

//k1{
//g{見出しのトリガ//}
//|見出しには、“////i”と“////ii”というトリガが付いています。このトリガは、それぞれ、章見出しと節見出しを表します。“第1章”や“1.1”などといった文字列は、EWBが自動的に付けてくれますので、入力する必要はありません。
//g{図表のトリガ//}
//|“////f1000”というトリガが、2箇所に入力されています。これは、図のトリガを表しています。最初に入力されているトリガが図の参照を、次のトリガが図のキャプションを意味しています。“////f”の後にある番号がその図の定義と参照関係を表しています。この番号は順番に並んでいる必要はありません。原稿の中で他の番号と重なっていなければよいのです。表やリストなどといったトリガの入力も同様です。
//g{箇条書//}
//|“////k1”は箇条書のトリガを表しています。箇条書や小組のように範囲を指定するものは、トリガの後に中括弧を付けて囲みます。
//}

//iii EWBシステムによる出力

  //f010303は、//l010302の原稿をEWBシステムによって、出力したものです。見出しや図表の番号が正確に付いており、きれいに組版されていることがわかります。

//f010303 EWBシステムによる出力

  では、なぜ、EWBコーディングされた原稿があるとこのようなきれいな出力が得られるのでしょうか？　これは、EWBシステムにちょっとした仕掛けがしてあるからです。概念的に表すと//f010304のような流れになります。

//f010304 EWBシステムの概念図

  この図にあるように、EWBシステムでは、EWBコーディングされた原稿ファイル以外に“//in24トリガ定義ファイル”と“//in25スタイルファイル”と呼ばれるものを必要とします。このトリガ定義ファイルとは、トリガの意味をEWBシステムに伝える役目を行い、スタイルファイルは組版の指示を行うものなのです。EWBシステムでは、これらの3つのファイルを読み込んでトリガを解釈し、組版して出力します。これらのファイルについては、第2部で詳しく説明しますので、ここでは、このような仕掛けになっているのだということを覚えておいてください。
  EWBシステムは、このような仕掛けになっているため、原稿には手を入れずに、出力結果を変えることができます。たとえば、極端な例になりますが、横組の書籍を縦組に変更するなどといった変更も簡単に対応できます。それでは、実際に、トリガ定義ファイルとスタイルファイルを他のものに入れ換えて、出力してみましょう（//f010305）。

//f010305 スタイルファイルを変更して出力

  このように、同じ原稿を出力したにも関わらず、//f010303とは全く違ったイメージになります。この2つの出力を比較することから、トリガとは、組版命令とは異なったものであることがわかります。あえて、組版との関係を考えてみると、「ここから組み方が変わります」という印としての意味しかありません。EWBシステムにとって、どのような組版をするかということは、トリガ定義ファイルとスタイルファイルの2つで決まるわけです。

//ii トリガ入力の真の意味は

  前節で述べたように、トリガは組版命令ではありません。では、トリガ入力は何のために行うのでしょうか。また、誰がトリガを入力していくものなのでしょうか。ここでは、トリガというものを、もう少し掘り下げてみましょう。

//iii 本を作る作業とは

  本を作る作業を大きく分けるとしたら、編集と制作という2つの作業からなります。編集は、企画意図に基づいて、全体の構成を考えて、原稿を依頼したり、原稿の内容を煮詰めたりします。一方、制作は、その内容をより効果的に伝えるために、書体や装丁を工夫します。
  ここで、本の中の要素、たとえば、節見出しを作る場合を考えてみることにします。編集者は、「この一文は節のレベルの見出しである」というような意味上の論理的な処理を行います。また、制作者は「節見出しには、新ゴBの20級1歯詰め」のような実体に結びつける物理的な処理を行います。これらの2つの処理があって、はじめてページの中に、節見出しが出来上がるわけです。このように、本を作る作業を“論理”と“物理”というように分けて考えることにより、編集者と制作者の作業分担が、自然に見えてきます。
  従来の編集の作業においては、マーカーと紙を使って論理的な処理を行っていましたが、EWBではこの処理をトリガを使って行います。トリガを使用することで、コンピュータに編集者の意志が通じるわけです。また、制作者は、このトリガに関する体裁をコンピュータ上のスタイルファイルというものを利用して表現します。このように、EWBでは、トリガとスタイルファイルと呼ばれるものを使うことで、作業の切り分けを行うことができるのです。

//iii 文書の論理構造

  さらに、一歩考えを進めて、本全体を眺めてみましょう。ページの中にある見出しや箇条書などといった要素は、ランダムに並んでるわけではありません。章の中に節があり、節の中に本文や図があるといったように、論理的な入れ子（あるいは階層）構造になっています（//f010306）。このような構造を、一般的に、文書の//g{論理構造//}と呼びます。また、見出しは本文より大きな文字で組まれているとか、脚注はページの下に位置しているなどといった見た目の構造のことを//g{物理構造//}と呼びます（//f010307）。

//f010306 文書の論理構造

//f010307 文書の物理構造

  文書の論理構造という言葉を使えば、編集者の仕事は論理構造を記述することであり、制作者の仕事は物理構造の記述であるといえます。EWBでは、この論理構造を、トリガを使って記述することになるわけです（//f010308）。
  「トリガによる文書の論理構造の記述」、これがEWBのトリガの真髄なのです。

//f010308 トリガを使った文書構造記述

//c2{
//g{Column:編集トリガと組版トリガ//}

  EWBでは、見出しや箇条書などの要素をマークアップするトリガを//g{//in26編集トリガ//}と呼び、強制改ページやアキ調整などのレイアウトに関係するトリガを//g{//in27組版トリガ//}と呼んでいます。
  これらのトリガは、作業工程上において、同時に入力されることはありません。執筆や編集作業時には編集トリガが使用され、レイアウト作業時には組版トリガが入力されます。もし、同時に使われる場面が現われてしまったら、各作業工程の流れを確認してみましょう。
//}

//ii トリガ入力とコミュニケーション

  いろいろと面倒な話をしてきましたが、EWBを使って仕事を進めるためには、トリガ入力が不可欠です。「EWBは、トリガなんてものを入力しなきゃいけないなんて面倒だ！」と思うかもしれません。しかし、数種類の小さい文字列を入力するだけですから、慣れれば本一冊、数時間で済んでしまうのです。
  ここでは、より積極的にEWBを利用していただくために、トリガはコミュニケーションをスムースにする触媒の役目があるというお話をしていきます。

//iii 筆者と編集者

  原稿執筆の段階から筆者にトリガを入力してもらうのもよい方法です。編集者のトリガ入力の負担も軽くなり、トリガによって筆者の意図が間違いなく伝わります。特に、標準トリガは効果抜群です。さらに、原稿全体の構成が見やすくなるというメリットもあります。

//iii 編集者と編集者

  編集者と編集者間のコミュニケーションでも、トリガは役に立ちます。たとえば、複数の編集者が一冊の本を担当しているなどといった場合です。トリガの入力規則を決めておけば、編集者間で原稿をやり取りしながら、容易に編集作業を進めることができます。

//iii 編集者と制作者

  一冊の本を作るためには、編集者と制作者間の打ち合せが頻繁に行われます。EWBでは、トリガをキーワードにすることで、打ち合せをスムースに行うことができます。たとえば、従来の方法では、箇条書がたくさんあった場合に、「この部分の箇条書の問答はどうします？」といったように一つ一つ確認しながら、打ち合せをしなければなりませんでした。しかし、EWBでは、「箇条書“////k2”の問答は？」というように、トリガによって表される要素ごとの打ち合せだけで済みます。
