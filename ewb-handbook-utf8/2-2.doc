chapter 2
//i 原稿入力

  EWBでは原稿ファイルの作成、すなわち文字や約物、そしてトリガをいかに効率よく入力していくかということが、各フェーズの中で一番のポイントとなります。
  ここでは、文字やトリガを入力する際に気を付けなければいけない基本的な規則を中心に解説をします。編集者だけでなく、筆者などといった原稿ファイルの作成に携わる方々は、大きな作業の効率アップにつながりますので、ぜひ一読してください。

//ii 原稿の//in155文字コード

  EWB原稿では漢字コードとして//in156EUCまたはShift-JISを使用します。漢字コードがJISの文書である場合はあらかじめ漢字コードを変換しておく必要があります。
  改行コードはUNIX形式、DOS形式、Macintosh形式のいずれでも扱うことができますが、UNIXのエディタで扱うことを考えてあらかじめUNIX形式に変換しておいたほうがいいでしょう。
  漢字および改行コード変換には//g{//in159tounix//}というコマンドを使用します。tounixは漢字コードをEUC、改行コードをUNIX形式に変換します。

//list{
% tounix 原稿ファイル名
//}

  ファイル名を複数書いて一括変換することもできます。

//ii 原稿の管理

  筆者から受け取った原稿を、まず整理しなければなりません。EWBでは、基本的に、“章単位”で処理を行っていきます。したがって、原稿のファイルは、必ず章単位で扱ってください。この時、ファイル名は“chap01.ewb”、“appendix.ewb”などといったようにわかりやすいものにすると原稿管理に役立ちます。
  また、作成するファイルが何章にあたるかという情報を、EWBに伝えなければなりません。これは、ファイルの先頭に“//g{//in1chapter//}”という文字列を使って表します。たとえば、第2章の原稿ファイルであれば、“chapter 2”などといった具合いに記述するわけです。

//ii 文字の入力規則
 
  EWBでは、パソコンのキーボードから入力した文字は必ず出力されます。たとえば、全角文字で“１２、０００ＵＳ＄”と入力しても、半角で“12,000US$”と入力しても問題なく出力は行われます。しかし、この場合に、内容的な違いはありませんが、出力される文字の表現にちょっとした差が現れます。
  ここでは、きれいな出力を得るためには、文字や約物をどのような規則で入力していったらいいのかという“コツ”について説明します。

//iii 入力した文字はそのまま出力

  一般に、ワープロなどで漢字やひらがな類を入力する場合は全角のみとなりますが、英数字類は半角と全角の2種類で入力することができます。EWBでは、入力された文字の種類によって、出力形式が異なってきます。
  まずここでは、全角と半角の入力による違いを見てみましょう。

//iiii //in4英数字

  英数字を、全角で入力した場合と半角で入力した場合では、書体と字送りに違いが現れてきます。全角で入力した文字は和文書体を使って“//in8全角送り”で出力され、半角で入力した文字は欧文書体を使って“//in7欧文送り（//in6プロポーショナルピッチ）”になります。
  また、//in5縦組の場合には、この違いが顕著に現れます。英数字などを全角で入力すると漢字と同じ方向の“立った状態”に、半角で入力すると90度回転した“寝た状態”に出力されます（//f020201）。縦組の英数字入力は、意識的に文字を打ち分ける必要があるため注意が必要です。

//f020201 縦組における全角文字と半角文字

//iiii //in9約物／//in10記号

  約物や記号に関しても、英数字と同様に、全角と半角では出力結果が異なってきます。そのため、状況によって全角と半角をきちんと打ち分けなければなりません。たとえば、パーレンを全角と半角で入力してみると、半角で入力したパーレンは隣合った和文に比べて少し下がって出力されます（//f020202）。これは、パーレンが欧文ベースラインの位置に合ってしまうためで、このような場合に半角を用いるのは、不適切といえます。しかし、このことがすべての約物や記号類にいえるとも限りません。“-”や“*”などといった記号は、半角の方が適切な場合が多いのです。このように約物や記号は入力の仕方によって、見え方がさまざまに変化するため、まずは、文字入力する前に、各自で統一的な入力仕様を決めることをお勧めします。//g{Appendix //numref{yakumonokigou//}//}（//pageref{yakumonokigou//}ページ）に、推奨する入力仕様をあげておきますので、参考にしてください。

//f020202 パーレンの入力

//iiii //in11改行

  EWBでは、行末に入力された1つの“改行”によって段落の終りを認識します。そして、ワープロなどと同様に、改行のみの行は空行を意味することになり、改行を複数個入力することで段落と段落の間を大きく空けることができます（//f020203）。
  また、ワープロ画面上で行を揃えるために、段落の途中で改行を入れてしまうと、EWBは改行以降の文書を違う段落と見なして組版してしまうため注意が必要です。

//f020203 改行で段間を空ける

//iiii //in12スペース

  ワープロで入力できる“スペース”には、//in13全角スペースと//in14半角スペースがあります。全角スペースは、全角幅のアキを空けるのに使え、文字幅はいつも一定に保たれます。たとえば、段落先頭の1文字をインデントさせる時や、語と語の区切りなどに用いることができます。
  一方、半角スペースは欧文スペースとして扱われるため、英単語の区切りなどに使うことができます。この欧文スペースは、組版によって文字幅が変動し、行末にくると消滅してしまいます。//in15ハイフネーションができないような長い単語を行末で分ける場合に、この半角スペースを入力しておくと、その位置で改行ができるという効果もあります。

//iiii //in16タブ

  タブは、単語や文書のカラム揃え（桁揃え）に使用することができます（//f020204）。本文中によくある簡単な表やリストなどは、タブを用いてカラムを揃えておくと、簡単に縦の方向に揃って出力されます。この時、カラム間のアキは、タブストップの値で決ってきます。ワープロ上のタブストップの値を変更して入力してください。

//f020204 タブによる桁揃え

//iiii //in17コントロールコード

  EWBでは、タブ以外のコントロールコードは、すべて無視されます。ワープロなどで使用される改ページ“^L”などは、原稿中に入力されていても、組版には影響しません。

//iii EWBで出力できない文字

  この章のはじめで、「EWBは、キーボードから入力した文字は必ず出力されます」と述べました。しかし、ワープロなどで入力できる一部の文字は、出力デバイスのシステムとの違い（文字コード体系の違いなど）で、場合によっては多少の工夫をしないと出力されないことがあります。そこで、EWBでは、すべてのコンピュータで確実に文字が扱えるように、入力文字を“半角ASCIIとJISで定められた全角文字”と規定しています。

//iiii EWBで扱えない文字

  EWBでは、半角カナとメーカーが独自に用意したJIS以外の全角文字を使用することができません。たとえば、NECのPC-9801を例にとると
//k1{
・//in18半角カナ（0xa1～0xdf）
・//in19NEC外字（JIS:0x2921～0x2d7fとJIS:0x7920～0x7c7f）
//}
の範囲の文字は使用できないことになります。しかし、このNEC外字と呼ばれる中には、よく使われる“1～10までの//in20丸付き数字”と“//in21ローマ数字”もはいっています。EWBでは、これらの文字に限って標準で扱えるようにしてあります。
  もし、半角カナ文字が原稿中に入力されていると、

//list2{
☆:sample.doc(34行):ＴｅＸでは扱えない文字です．終了します
sample.doc:エラー発生:pass1
//}

のようなエラーメッセージが組版時に出力され処理を中止します。また、NEC外字が原稿中にあると、

//list2{
★:sample.doc(32行):ＴｅＸでは扱えない文字です．
//}

のような警告メッセージが組版時に出力され、その文字は正常に出力されません。


//ii //in22編集トリガの入力規則

  トリガ入力は、EWBでは避けては通れない作業です。なぜなら編集者の編集意図は、トリガによって、EWBシステムに伝えられるからです。ここでは、正しく、そして効率よくトリガを入力するために、知っておかなければならないことを解説していきます。

//iii //in23トリガの基礎知識

  トリガには、“//in24編集トリガ”と“//in25組版トリガ”の2種類があり、原稿入力時に入れるものは、このうち編集トリガを使用します。編集トリガは、執筆者や編集者の意志を表現するもので、原稿に対して“見出し”や“箇条書”などといった論理的な意味付けをするものです。トリガは、“//in26トリガ開始文字列”と呼ばれる半角記号とそれに続く数個の半角英数字から構成される文字列で、文書中に埋め込まれます。通常、このトリガ開始文字列は、“////”を使用します。もし、原稿中でこの開始文字列を使いたい場合は、“////////”のように記述してください。
  また、トリガは各要素の種類によって入力方法が、多少異なってきます。たとえば、要素の範囲指定をするトリガの場合は、開始を表す“{”と終了を表す“}”を用いたり、図表キャプションや脚注の場合には、定義と参照関係を解決するための番号を入力したりします。このように、各トリガは要素によって、入力規則が決められているのです。

//iii 編集トリガのグループ分け

  編集トリガは、トリガの入力方法やその性質などによって、8つのグループに分類することができます。

//k1{
//g{//in27単純トリガグループ//}
//|罫線トリガ（“////kei”）が、このグループに属します。1つのトリガが単純に1つの機能に置き換えられるため、このような呼び方をしています。
//g{//in28見出しトリガグループ//}
//|見出しトリガ（“////i”）が、このグループに属します。
//g{//in29グループトリガグループ//}
//|小組（“////c1{”）／表組（“////table1{”）／リスト（“////list1{”）／囲み罫（“////w1{”）のトリガが、このグループに属します。開始のトリガと終了のトリガによって囲まれた部分に対して作用します。このトリガは、行の途中に入力することができません。
//g{//in30強調トリガグループ//}
//|強調文字（“////g{”）／ルビ（“////rb1{”）／傍点（“////bou1{”）のトリガが、このグループに属します。グループトリガと同様に、開始と終了のトリガによって囲まれた部分に作用します。グループトリガとの違いは、文章のどこの位置にでも入力できるという点です。
//g{//in31図表トリガグループ//}
//|図表トリガ（“////f”など）が、このグループに属します。このトリガには、定義部と参照部があります。
//g{//in32箇条書トリガグループ//}
//|箇条書トリガ（“////k1{”）が、このグループに属します。グループトリガと同様に、開始のトリガと終了のトリガがあります。
//g{//in33脚注トリガグループ//}
//|脚注トリガ（“////ky”）が、このグループに属します。このトリガにも図表トリガと同様に、定義部と参照部があります。
//g{//in34非展開トリガグループ//}
//|強調トリガと同様に、開始と終了のトリガによって囲まれた部分に作用します。強調トリガとの違いは、囲まれた部分がEWBにより展開されずにそのまま//TeXに渡されるという点です。
//g{//in510ラベルトリガグループ、//in511参照トリガグループ//}
//|ラベルトリガ（“////label{”）や参照トリガ（“////pageref{”など）が、このグループに属します。これらのトリガはラベルと参照を組み合わせて使用します。見出しの相互参照のためのラベルをラベルトリガで作り、参照トリガを使用してページ番号、文字列を参照します。参照トリガは見出しだけでなく図表に対しても使用できます。
//g{//in540URLトリガグループ//}
//|URLトリガ（“////url{”）が、このグループに属します。開始のトリガと終了のトリガによって囲まれた部分に対して作用します。このトリガはWEBページ等のURLに対して使用します。
//g{//in35組み込みトリガ//}
//|EWBに、最初から組み込まれているトリガです。
//}

//iii トリガの入力方法

  それでは、各グループごとにトリガの入力方法を詳しく見ていくことにしましょう。

//iiii //in36単純トリガグループ

  単純トリガは、その用途に合わせて適切な位置に入力してください。ただし、単純トリガの直後に英文字がある場合は、トリガとその英文字との区別ができなくなってしまうため、トリガの後に半角スペースを1つ入力してください。

//list2{
□□□□□□□□□□□□□□□□□□□□□□□□□
////kei
□□□□□□□□□□□□□□□□□□□□□□□□□
//}

//iiii //in37見出しトリガグループ

  見出しトリガは、必ず行頭から入力します。見出し文字列（内容）は、トリガの後にスペースを入れ、それに続いて入力します。見出しトリガの有効範囲は、トリガが入力されている行だけなので、見出し文字列の中には改行を入れないでください。
  また、見出しの前後に入力した空行は、EWBシステムによって無視されるため、出力には反映しません。
//list2{
□□□□□□□□□□□□□□□□□□□□□□□□□
////i 見出し文字列
□□□□□□□□□□□□□□□□□□□□□□□□□
//}

//iiii //in38グループトリガグループ

  グループトリガには、開始を表すトリガと終了を表すトリガがあります。開始を表すトリガは、必ず行頭に入力してください。また、終了を表すトリガの後には、文字やトリガは入力できません。必ず、終了を表すトリガの後には改行を1つ入力してください。この終了を表すトリガは、“////}”という省略形を使用することもできます。

//list2{
□□□□□□□□□□□□□□□□□□□□□□□□□

////c1{//cmt{……………開始を表すトリガ//}
□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□
////c1}//cmt{……………終了を表すトリガ//}

□□□□□□□□□□□□□□□□□□□□□□□□□
//}

  このグループトリガには、//g{//in39改行自動挿入//}という便利な機能が備わっています。開始トリガの前と終了トリガの後に、統一したアキを自動的に入れる仕掛けです。この指定がされている場合には、開始トリガの前の空行と終了トリガの後の空行を無視するようになっています。
  さて、このグループトリガの中で1つだけ特殊なトリガがあります。それは、表組トリガで、オプション指定という機能です。開始トリガ（“////table1”）と“{”との間に、オプション文字列と呼ばれるものが指定できるようになっています。このオプション文字列は、ブラケットを使って記述するもので、表のカラム幅や揃え（左、中、右）の体裁指定ができます。
  この表組トリガの入力仕様を詳しく記述すると、次のようになります。

//list{
////table1[オプション文字列]{
...
////}
　■オプション文字列:=[1行目の体裁][2行目の体裁]...[n行目以降の行の体裁]*
　■n行目の体裁:=[1列目の体裁|2列目の体裁|...|m列目の体裁]**
　■n列目の体裁:=[l|c|r[(列の幅)]]***
				l:=左揃え
				c:=中揃え
				r:=右揃え
				列の幅:=列のワード数を指定する。小数も指定可。
					単位として“w”を付ける

        *オプション文字列は省略可能。nは任意
        **mが表の全列数より小さい場合は、m+1列目以降はなりゆき
        ***揃えを省略した場合は左揃えになり、列の幅は指定できない
//}

  たとえば、次のようなトリガ指定を考えてみましょう。

//list2{
□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□

////table1[c(5w)r(8w)l]{//cmt{……………開始を表すトリガ//}
□□		□□□□	□□□□□□□□□□□□□□□□
□□□		□□□□□	□□□□□□□□□□□□□□□
□□□□	□□□□□□	□□□□□□□□□□□□□□
////c1}//cmt{……………終了を表すトリガ//}

□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□
//}

  この指定では、表の第1カラム目は5文字分の幅でセンター揃えをし、第2カラム目は8文字分の幅で右詰めを行い、第3カラム目の幅はなりゆきで左揃えになります。

//iiii //in40強調トリガグループ

  強調トリガもグループトリガと同様に、開始を表すトリガと終了を表すトリガがあります。この時、終了を表すトリガは、“////}”という省略形が使えます。

//list2{
□□□□□////g{強調したい文字列////g}□□□
//}

  このトリガグループで、多少特殊な使い方をするのがルビトリガです。ルビを振りたい漢字と読み仮名を“,”で区切って記述します。

//list2{
□□□□□////rb1{漢字,かんじ////rb1}□□□□
//}

  傍点トリガは通常の強調と同様に、傍点を振りたい文字列をトリガで囲むだけです。

//list2{
□□□□□////bou1{傍点を振る文字列////bou1}□□□□
//}

//iiii //in41図表トリガグループ

  図表トリガは、トリガに続いて番号を入力します。枝番号を付ける場合には、番号に続いて半角“-”を入力し、その後に半角英数字を1文字入力してください。
  また、図表トリガには、“参照”と“定義”と呼ばれる役割りの違うトリガがあります。このトリガの違いをEWBでは、次のように判断しています。

//k1{
・図表トリガが行頭からはじまっていて、トリガに続く番号、もしくは枝番号を表す半角文字の後にスペースがある場合は、図表トリガの定義と見なす。このスペースに続く文字列が、図表のキャプションとなる。
・それ以外の本文などにある図表トリガは、図表の参照を表す。
//}

  参照部に相当する図表トリガの後に半角数字や半角“-”が続く場合には、トリガとの区別ができなくなるため、その後に半角スペースを1つ入力してください。定義部の前後にある空行は無視されるため、出力には影響しません。

//list2{
□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□////f101010□□□□□□□□
                        //cmt{図の参照//}

////f101010 図のキャプション    //cmt{………図の定義//}

□□□□□□□□□□////f101020-a□□□□□□□□
□□□□□□□□□□////f101020-b□□□□□□□□
                        //cmt{図の参照//}

////f101020-a 図のキャプション　//cmt{………図の定義//}
////f101020-b 図のキャプション
□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□
//}

//iiii //in42箇条書トリガグループ

  箇条書トリガにも、開始を表すトリガと終了を表すトリガが存在します。開始を表すトリガは必ず行頭に入力してください。終了を表すトリガには、“////}”という省略形を使用することができます。また、このトリガの後には文字やその他のトリガは書けません。必ず、改行を1つ入力してください。

//list2{
□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□

////k1{//cmt{……………開始を表すトリガ//}
・箇条書の文その1
・箇条書の文その2
・箇条書の文その3
////k1}//cmt{……………終了を表すトリガ//}

□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□
//}

  箇条書項目の記号によっては、指定された//in43問答に揃わない場合もあります。そのような場合には、“////|”というトリガを使います。

//list2{
□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□

////k1{//cmt{……………開始を表すトリガ//}
（1）////|箇条書の文その1
（2）////|箇条書の文その2
（3）////|箇条書の文その3
////k1}//cmt{……………終了を表すトリガ//}

□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□
//}

  さらに、箇条書グループのトリガはグループトリガと同様に、改行自動挿入という機能を使って、箇条書の前後のアキを統一することができます。この指定がされている場合には、開始トリガの前の空行と終了トリガの後の空行が無視されます。

//iiii //in44脚注トリガグループ

  脚注トリガにも、図表トリガと同様に参照と定義があります。参照部は、脚注トリガに続いて番号を入力し、定義部は、開始を表すトリガと終了を表すトリガの間に入力します。開始を表すトリガは、必ず行頭に入力してください。また、終了を表すトリガには、“////}”という省略形が使えます。このトリガの後には、文字やその他のトリガは書けませんので、必ず改行を1つ入力してください。
  脚注の文字列（内容）は、この定義部の中に記述するもので、トリガと番号の後にスペースを空けてから入力します。この時、脚注は複数行になっても構いません。

//list2{
□□□□□□□□□□////ky100□□□□□□□□
□□□□□□□□□□////ky200□□□□□□□□
                    //cmt{脚注の参照//}

□□□□□□□□□□□□□□□□□□□□□□□□□
////ky{//cmt{……………定義部の開始を表すトリガ//}
////ky100 脚注の文字列
////ky200 脚注の文字列
////ky}//cmt{……………定義部の終了を表すトリガ//}
□□□□□□□□□□□□□□□□□□□□□□□□□
//}

//iiii //in45非展開トリガグループ

  強調トリガなどで“-5mm”や“fig_01.eps”といった文字列を//TeXで処理するパラメータとして//TeXに渡そうとするとこれらの文字列をEWBが“--5mm”“fig\us01.eps”という形で//TeXに渡してしまいます。これをそのままの形で//TeXに渡すようにするのが非展開トリガです。
 このトリガはグループトリガと同様に、開始を表すトリガと終了を表すトリガがあります。この時、終了を表すトリガは、“////}”という省略形が使えます。

//list2{
□□□□□////ICON{50mm,0mm,0,icon_01.eps////ICON}□□□
//}

//iiii //in512ラベルトリガグループ、//in513参照トリガグループ

  ラベルトリガおよび参照トリガは、見出しや図表を別の場所から参照するのに使用します。見出しの直後にラベルトリガを書いておくと、別の場所からその見出しの番号、見出しの文字列、見出しのあるページ番号を参照トリガでひろうことができます。また、図表トリガを参照トリガで参照すると図表番号、図表のキャプション、図表のあるページ番号をひろうことができます。
  強調トリガと同様に、開始、終了を表すトリガがあり、終了トリガには“////}”という省略形が使えます。ラベルにする文字列は英字および数字が使用できます。
  ラベルのある箇所と参照する箇所は同じファイル中でなくともかまいません。図表番号は、文中に図表トリガをそのまま記述する方法でも参照できますが、その場合は同じ文書ファイル中からしか参照できません。

//list2{
////ii □□□□□□□□□□□□□□//cmt{……………見出し//}
////label{label01////label}//cmt{……………ラベルの作成//}

  □□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□
  □□□□□□////numref{label01////numref}□□□□□□□□□□□□
              //cmt{見出し番号の参照//}

////f010101 図版キャプション//cmt{……………図表の定義//}

□□□□□□□□□□□□□□□□□////strref{label01////strref}□□
                                  //cmt{見出し文字列の参照//}
  □□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□////pageref{label01////pageref}□□□□□
    //cmt{見出しページ番号の参照//}
  □□□□□□////numref{f010101////numref}□□□□□□□□□□□□□
              //cmt{図表番号の参照//}
□□□□□□□////pageref{f010101////pageref}□□□□□□□□□□□□
              //cmt{図表のページ番号の参照//}
□□□□□□□□□□□□////strref{f010101////strref}□□□
                        //cmt{図表のキャプションの参照//}
//}

//iiii //in541URLトリガグループ

  URLトリガは文中のURLに対して使用します。このトリガで記述された箇所は、EWBの組版結果をPDFへ変換するとハイパーリンクとして機能するようになります。
  このトリガはグループトリガと同様に、開始を表すトリガと終了を表すトリガがあります。この時、終了を表すトリガは、“////}”という省略形が使えます。囲まれた部分は自動改行の対象とはならなくなるので使用時には注意が必要です。途中で改行させたい場合は、その箇所に“@@@@break()”や“@@@@hbreak()”といった組版トリガを入れる必要があります。
  また、“http:////www.abc.def...”の“////”の部分はEWBのトリガ開始文字列と同じなので、原稿では“////////”と記述しなければなりません。。


//list2{
  □□□////url{http:////////www.abc.def/ghi////url}□□□□□□□□□□□
□□□□□□□□□□□□□□□
  □□□□□□□////url{http:////////www.abc.def/@@@@break()ghi////url}□□□
□□□□□□□□□□□□□□          //cmt{途中で改行させる場合//}

//}

//iiii //in46組み込みトリガ

  組み込みトリガは、いままで説明したどのグループにも属さないものです。このトリガは、EWBに最初から組み込まれており、チューニングなどはできません。この組み込みトリガには、
//k1{
・//in47コメントトリガ
・//in48索引トリガ
・//in49インクルードトリガ
・//in50LaTeXトリガ
//}
の4つがあります。
  //in51コメントトリガは、プログラムトリガの中で使えるトリガです。プログラムリストに説明を付け加えるような場合に使用します。終了を表すトリガには“////}”という省略形も使えます。このトリガは、開始のトリガから終了のトリガまでを同一行内で記述してください。

//list2{
////list1{
main()
{
    ....
    printf("%d\n", a + b); ////cmt{コメントは1行で書きます////cmt}
    ....
}
////list1}
//}

  //in52索引トリガの入力は、図表トリガと同様にトリガに続いて番号を入力します。番号の後に半角数字が続く場合は、トリガと区別ができなくなってしまうため、半角スペースを1つ入力してください。なお、索引トリガは索引作成時のみに使用されるトリガで、本文の出力にはまったく影響しない唯一のトリガです。

//list2{
□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□////in100索引に入れたい文字列□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□
//}

  残りの2つのトリガは、基礎編では説明しなかったものです。これらのトリガは、通常ではあまり使用されません。
  まず、//in53インクルードトリガですが、これは文書中に他のファイルを読み込む時に使います。このトリガは、行頭に記述してください。そして、トリガの後に半角スペースを入れ、読み込みたいファイル名を入力します。このファイル名は、“絶対パス名”か作業ディレクトリからの“相対パス名”を指定してください。

//list2{
□□□□□□□□□□□□□□□□□□□□□□□□□

////inc ファイル名

□□□□□□□□□□□□□□□□□□□□□□□□□
//}

  また//in54LaTeXトリガは、//TeXのコードを書くために用意されたものです。通常の入力では手に負えない数式などを表現したい時に利用します。入力規則は、強調トリガグループと同じです。

//list2{
□□□□□////LaTeX{//TeXコード////LaTeX}□□□□□□□□
//}

//iii 編集//in55トリガの強さ

  “編集トリガの強さ”とは、前後に空行を持ったトリガが隣接してしまった場合に、出力にどのような影響があるのかということです。ここでは、具体的な例を見ながら説明していきましょう。

//f020205 隣合うトリガ

  //f020205を見てみると、“////ii”と“////c1{”の間、および“////c1}”と“////k1{”の間に空行があります。これらの空行は、出力に反映されるのでしょうか、それとも無視されてしまうのでしょうか。このような状況に遭遇すると、EWBでは次のような考え方で処理を行っていきます。

//k1{
・トリガに隣合う空行は、トリガが所有する
・トリガの所有する空行が出力されるか、無視されるかはトリガの性質によって決る
・トリガが隣合う場合、強い方のトリガが空行を所有する
・同じ強さのトリガが隣合う場合は、先に出てきたトリガが空行を所有する
//}

  そして、トリガの強さは、次のような順序になっています。

//k1{
1.//|見出しトリガ
2.//|改行自動挿入が指定されていないグループトリガ、箇条書トリガ
3.//|改行自動挿入が指定されているグループトリガ、箇条書トリガ、図表トリガ
//}

  この例では、見出しトリガが一番強いので、トリガの後にある空行は見出しが所有し、この空行は消滅します。そして、小組と箇条書の間にある空行は、箇条書の方が強いため箇条書の所有となり、この空行は出力されることになります。このように、トリガの強さと出てくる順番によって、空行の扱いが違いますので注意が必要です。

//iii //in56トリガのネスト

  脚注の中にプログラムリストを入れたり、小組の中に表組を入れたりと、各要素同士が混ざり合うような場面があります。このように、あるトリガの有効範囲内に他のトリガを入力することを、トリガの//g{ネスト//}と呼んでいます。トリガのネストには規則が存在しており、すべてのトリガの中に、すべてのトリガがネストできるわけではありません。たとえば、箇条書の中にコメントトリガが入力できなかったり、グループトリガの範囲には見出しが書けなかったりといった具合いです。さらに、トリガ以外のタブ入力にもこのような制限があります。//t020201は、トリガとタブのネストの可否を表しています。トリガ入力を行うときの参考にしてください。

//iii 編集トリガの入力のコツ

  トリガ入力は、大変そうに見えますが、基本的な知識を理解してしまえば、恐れることはありません。ここでは、効率よくトリガが入力できるように、ワンポイントアドバイスをします。

//iiii 使い慣れたワープロやエディタを使いましょう

  EWBには、専用のエディタがありません。文字入力やトリガ入力には自分の使い慣れたワープロなどを使ってください。UNIX上には“//in57vi”や“//in58emacs”などといったエディタがありますが、これらのエディタはUNIX上でプログラムを書くために作られたものですから、必ずしも原稿の編集に向いてるとは限りません。UNIXに慣れていない方は、これらのエディタを無理に使って効率を下げるよりも、Windows上の使い慣れたワープロやエディタを使いましょう。
  ただし、1つだけ注意しなければならないことがあります。“//in59一太郎”や“//in60Word”などといった印刷機能を持っているワープロで作成した原稿ファイルには、印刷時に使用する特殊なコードがはいっている場合があります。EWB用の原稿ファイルを作成する時には、必ず、“テキストファイル形式”で保存してください。また、UNIXへ転送後、//in61tounixコマンドで文字コードを変換することを忘れないでください。

//iiii 空行を入れよう

  これまで説明したように、見出しや図表キャプションなどといったトリガの前後には、複数の空行を入れることができます。ワープロ上で原稿を読みやすくするために、適切な場所に空行を入れましょう。

//iiii 番号の付け方

  脚注や図表トリガの後に入力する番号は、原稿中で昇順になっている必要はないという説明をしました。しかし、昇順になっている方が、原稿がわかりやすく図表の管理が楽になります。また、後からトリガ挿入を行いやすいように、この番号を10番あるいは100番おきにしておいた方が便利です。さらに、統一した番号付けの方法を決めておきましょう。たとえば、「第2章3節の4番目の図を、////f0203040と表す」と仮に決めておけば、後で読んだ時にわかりやすくなります。

//t020201 トリガ／タブのネスト
