chapter 2
//i EWBのプロローグ

  電子編集システムを編集部にいきなり導入することはなかなか難しいものです。アスキーでは、電子化が容易にできるように、作業工程を考慮に入れて開発したEWBと呼ばれるシステムを用意しました。
  この章ではEWBの特徴や、EWBを導入することで編集部の作業がどのように変化するかという説明をしていきます。EWBの基本を理解して、効率的な導入を行ってください。

//ii 現場から誕生したEWB

  EWBは、書籍やマニュアルなどの電子化のために開発されたシステムです。コンピュータの特長をうまく生かし、出版物を作成する時の便利なツールとなるように設計されたものです。

//iii EWBのコンセプトは

  EWBの開発コンセプトは、編集部がいかに無理なく電子化できるかです。編集部の声をダイレクトに聞けるという社内開発のメリットを最大限に生かして、EWBは開発されました。特に、開発時に意識したポイントは、

//k1{
・作業工程をなるべく変更しない
・作業分担もできるだけ変えない
・作業の効率をアップさせる
・できる限りコストを下げる
・既存の環境を利用する
・必ずプロの品質に耐えられること
//}

などがあげられます。
  そして、EWBではこれらの要求を満たすために、次のような答えを選択したのです。

//iiii //in16バッチ方式の採用

  EWBは、基本的に書籍やマニュアルの制作を目的としたシステムであるため、各要素の関係をうまく利用するバッチ方式を採用しています。この方式により、内容重視の大量文書を無理なく作成することができ、作業工程や作業分担に対する影響を最小限に抑えられます。

//iiii EWBを//in17UNIX上で動かす

  いろいろな要求に対して、満足に対応できるシステムはなかなかないものです。このことは、EWBにもいえることです。UNIXの世界では、自分が必要とする機能を持ったツールがない時に、既存のツールを組み合わせてその機能を実現するといった考え方があります。EWBをUNIX上で動作させることによって、満足いかない機能を他のツールと組み合わせることで充実させることができます。また、EWB自体は多数のツールによって構成されているため、必要に応じて一部の機能のみを使うこともできます。このように、EWBがUNIXという環境を利用することで、拡張性や柔軟性を得ることができ、いろいろな目的に対応できるわけです（//f010201）。

//f010201 UNIXにおけるツールの組み合せ

  さらに、UNIXには//in18ネットワーク機能があります。EWBをインストールしたUNIXマシンとPostScriptプリンタが1台あれば、ユーザーは自分のデスクトップマシンからネットワークを介してEWBを利用できます（//f010202）。

//f010202 UNIXネットワークとEWB

//iiii 高機能な組版エンジン

  電子化をすることで、出力品質が低下するようでは、たとえどんなに利用しやすいシステムでもプロの編集者には使ってもらえません。このため、EWBでは組版エンジンに//TeXを採用し、高品質な組版を実現しています。
  //TeXというと身構えてしまう方もいるとは思いますが、基本的にEWBのユーザーは//TeXを意識する必要はありません。あくまでも組版エンジンとして、EWBの内部で動いているものですから御安心ください（//f010203）。

//f010203 EWBと//TeXの関係

//ii EWBの特徴は何？

  こうして開発されたEWBを使用することによって、どんなことができるのでしょうか。ここでは、EWBの機能面から探ってみることにします。

//iii こんな機能がある

  EWBでは、入力した原稿を効率よく扱うことで、無理のない作業を行うことができます。

//iiii 文字／組版

  ワープロやエディタで入力した文字は、確実に出力に反映されます。書体は、和文21書体、欧文約200書体を扱うことができます。
  組版に関しては、縦組と横組の両者をサポートしています。文字の追い出しや追い込みなどは段落単位で行いますので、大変きれいに仕上がります。また、英単語の//in21ハイフネーション処理もほぼ自動的に行ってくれます。

//iiii //in22オートナンバリング

  ちょっと章の構成を変えたり、図の位置が変わったりすると、それに関連する章番号や図番号を全部付け直さなければなりません。何度も番号を付け変えていると、つい間違って後になって、あわててしまうことがあります。このため、EWBには、見出しや図表、さらには脚注の番号を組版時に自動的に付けてくれる機能があります。また、番号の数字をアルファベットにしたり、ローマ数字にしたりといったこともできます。このため、編集者は煩わしい番号管理から解放されます。
  また、EWBはページアップシステムですから、柱やノンブルも自動的に振られます。柱は該当する見出しをEWBが判断し、左右ページで異なる柱を付けることができます。

//iiii //in23オートレイアウト

  EWBは自動的にレイアウトを行う機能を備えています。あらかじめ制作者が指示した規則に従って、EWBはページを作っていきます。特に、図表類の少ない出版物には、かなりの威力を発揮します。
  しかし、コンピュータが規則に基づいてレイアウトするものですから、場合によっては、満足した結果が得られません。このような場合は、手動で対処する必要があります。

//iiii 社内校正／フィルム出力

  EWBでは、文字校正や版下校正をプリンタ出力によって、手軽に行うことができます。また、X Window Systemによるプレビュー機能を用いると、版下イメージが即座に見られるため、レイアウトの確認などは、より効率的に作業が行えます。
  //f010206を比較してみてください。解像度や書体は多少違いますが、組版結果や出力位置は、まったく一緒のはずです。このようにEWBでは、プリンタやプレビューで確認したものは、必ずフィルムの出力に反映されるのです。

//f010206 デバイスに依存しない出力

//ii EWBの作業工程を見る

  ここでは、EWBを作業工程の点から見てみることにしましょう。EWBを導入すると、作業がどのように変化するのでしょうか。

//iii 工程は変わるのか？

  従来、編集者は制作上の指示を、紙と鉛筆を使って行っていましたが、EWBでは、それと同じことをコンピュータの操作を通して行います。このため、手作業にくらべてはるかに早く、そして正確に作業を行えます。//f010207は、EWBの導入前と導入後の作業を表しており、グレーの部分は社内で行う作業を示しています。

//f010207 従来の作業とEWBを用いた作業

  この図からわかるように編集や指定などの工程は従来と変更がありません。変化があるのは、そこから先の作業です。従来の方法では、写植入稿後の初校や再校の作業がありますが、これがEWBでは、プリンタ出力を使った社内校正にとって代わっています。EWBでは、レイアウトはコンピュータが行うので、版下貼り込みや版下校正いう工程がなくなり、その代わりに、自動で行われたレイアウトの修正をするという作業が発生します。

//iii 同時進行が可能に

  今度は作業工程の変化をスケジュール面から見てみましょう。

//f010208 従来のスケジュールとEWBのスケジュール

  //f010208を見てみると従来の方法では、写植入稿とそれに伴う校正、さらに版下貼り込みと版下校正があります。EWBではこのような工程が一切なくなり、それに伴う待ち時間も少なくなっていることがわかります。さらに、EWBでは、プリンタによる出力が可能なため、編集者がこの出力を使って校正している間に、体裁の追加や変更を制作者が行うなどといった作業が並行して行えます。
